/*
 * sitePickerGenerator
 * Shows a bottom sheet for assigning a site to a person
 * Pre: carpoolSite is an active carpool site, and project is a project for which this carpool site has >=1 active site
 * Post: A promise is resolved with the ID of the site assigned to the person
 */
app.factory('sitePickerGenerator', ['$mdBottomSheet', '$log', '$q', function($mdBottomSheet, $log, $q) {

  return function(carpoolSite, project, persons, drivers, assignLaterOption = true) {
    var defer = $q.defer()

    $mdBottomSheet.show({
      templateUrl: 'app/modalTemplates/sitePickerSheetTemplate.html',
      controller: 'SitePickerSheetController',
      locals: {
        myCarpoolSite: carpoolSite,
        selectedProject: project,
        myPersons: persons,
        myDrivers: drivers,
        myAssignLaterOption: assignLaterOption
      },
      parent: angular.element(document.body)
    }).then(function(selectedSite) {
      $log.log('selectedSite id' + selectedSite['projectSite_id'])
      defer.resolve(selectedSite['projectSite_id']);
    })

    return defer.promise
  }
}])

/*
 * SitePickerSheetController
 * Controller for site picker bottom sheet view, generated by sitePickerGenerator service
 */
app.controller('SitePickerSheetController', ['$scope', '$log', '$mdBottomSheet', 'getActiveSites', '$rootScope', 'selectedProject', 'myDrivers', 'myPersons', 'myAssignLaterOption', function($scope, $log, $mdBottomSheet, getActiveSites, $rootScope, selectedProject, myDrivers, myPersons, myAssignLaterOption) {

  //TODO pass this in somehow (made Trello card)
  $log.log('calling getActiveSites with carpool site ' + $rootScope.myCarpoolSite + ' and project ' + selectedProject)
  var activeSitesPromise = getActiveSites($rootScope.myCarpoolSite, selectedProject)
  $scope.persons = myPersons
  $scope.drivers = myDrivers
  $scope.assignLaterOption = myAssignLaterOption
  activeSitesPromise.then(function(activeSites) {
    $scope.sites = activeSites
    $scope.sites_noDriversYet = Object.keys($scope.sites)
    $scope.sites_alreadyHaveDrivers = []

    angular.forEach($scope.drivers, function(driverInfo, driverId) {
      $log.log("site: " + $scope.persons[driverId].assignedToSite_id)
      $log.log("index: " + $scope.sites_noDriversYet.indexOf($scope.persons[driverId].assignedToSite_id))
      if ($scope.sites_noDriversYet.indexOf($scope.persons[driverId].assignedToSite_id) > -1) {
        var index = $scope.sites_noDriversYet.indexOf($scope.persons[driverId].assignedToSite_id)
        $scope.sites_noDriversYet.splice(index, 1)
        $scope.sites_alreadyHaveDrivers.push($scope.persons[driverId].assignedToSite_id)
      }
    })
  })

  $scope.allSitesDefault = [
    { name: 'allSites', projectSite_id: 'allSites', icon: 'watch_later'}
  ]

  $scope.listItemClick = function(siteId) {
    if (siteId == 'allSites') {
      var selectedSite = $scope.allSitesDefault[0]
      $log.log('$index is ' + selectedSite + '!')
    }
    else {
      var selectedSite = $scope.sites[siteId];
    }

    $log.log('selectedSite is ' + selectedSite["name"])
    $mdBottomSheet.hide(selectedSite);
  };
}])
